# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pr:
- master



jobs:
- job: build_linux
  pool:
    vmImage: 'ubuntu-latest'
  
variables:
  tag: '$(Build.BuildId)'

  steps:
  
  - task: Docker@2
    inputs:
      command: buildAndPush
      repository: 'pamela-soulis-project1'
      dockerfile: '**/Dockerfile'
      containerRegistry: 'e8da99fa-c514-4321-b917-f3369c877dd7'
      tags: |
        $(tag)
      
 
# proj1Dockerize

  # - task: Docker@2
  #   inputs:
  #     repository: 'pamela-soulis-project1'
  #     command: 'buildAndPush'
  #     Dockerfile: '$(System.DefaultWorkingDirectory)/Dockerfile'

  - task: SonarCloudPrepare@1
    displayName: sonarcloud prepare analysis
    inputs:
      SonarCloud: 'sonarcloud-pamelasoulis'
      organization: '2006-jun15-net'
      scannerMode: 'MSBuild'
      projectKey: '2006-jun15-net_pamela-soulis-project1'
      projectName: 'Pamela Soulis project 1'

  - script: dotnet build
    displayName: dotnet build

  - task: SonarCloudAnalyze@1
    displayName: sonarcloud run analysis

  - task: SonarCloudPublish@1
    displayName: publish sonarcloud result
    inputs:
      pollingTimeoutSec: '300'

  - task: DotNetCoreCLI@2
    displayName: dotnet test
    inputs:
      command: 'test'
      arguments: '-c Release --collect:"XPlat Code Coverage"'
      testRunTitle: 'ubuntu'

  - task: PublishCodeCoverageResults@1
    displayName: publish code coverage
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.TempDirectory)/*/coverage.cobertura.xml'
      failIfCoverageEmpty: true

  - script: dotnet publish -o publish
    displayName: dotnet publish
    
  - task: AzureRmWebAppDeployment@4
    displayName: azure app service deploy
    inputs:
      ConnectionType: 'AzureRM'
      azureSubscription: 'Azure subscription 1(3edca897-65af-4673-84e4-b3d1c79e363a)'
      appType: 'webApp'
      WebAppName: 'pamela-soulis-project1'
      packageForLinux: '$(System.DefaultWorkingDirectory)/publish'


  - script: |
      echo Add other tasks to build, test, and deploy your project.
      echo See https://aka.ms/yaml
    displayName: 'Run a multi-line script'

- job: build_windows
  pool:
    vmImage: windows-latest

  steps:
  - task: NuGetToolInstaller@1
    displayName: install nuget
    inputs:
      versionSpec: 

  - task: NuGetCommand@2
    displayName: nuget restore
    inputs:
      command: 'restore'
      restoreSolution: '**/*.sln'
      feedsToUse: 'select'


  - task: VSBuild@1
    displayName: Visual Studio build
    inputs:
      solution: '**\*.sln'
      platform: 'Any CPU'
      configuration: 'Release'
      restoreNugetPackages: true

  - task: VSTest@2
    displayName: visual studio test
    inputs:
      testSelector: 'testAssemblies'
      testAssemblyVer2: |
        **\*test*.dll
        !**\*TestAdapter.dll
        !**\obj\**
      searchFolder: '$(System.DefaultWorkingDirectory)'
      codeCoverageEnabled: true
      testRunTitle: 'windows'
      platform: 'Any CPU'
      configuration: 'Release'
